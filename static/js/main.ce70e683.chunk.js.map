{"version":3,"sources":["ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","onClick","deleteItem","icon","duration","easing","library","add","faTrash","App","state","currentItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","newItems","filteredItems","filter","console","log","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAqCeA,MAhCf,SAAmBC,GACf,IACMC,EADQD,EAAME,MACIC,KAAI,SAAAC,GAExB,OAAO,qBAAKC,UAAU,OAAf,SACH,8BACH,uBAAOC,KAAK,OAAOC,GAAIH,EAAKI,IAAKC,MAAOL,EAAKM,KAAMC,SAAU,SAACC,GAC1DZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAML,EAAKI,QACzC,+BAER,cAAC,IAAD,CAAiBH,UAAU,UAAUU,QAAS,WAC1Cf,EAAMgB,WAAWZ,EAAKI,MACvBS,KAAK,gBARkCb,EAAKI,QAkB3C,OACI,8BACK,cAAC,IAAD,CAAUU,SAAU,IAAKC,OAAO,cAAhC,SACJlB,O,eCxBTmB,IAAQC,IAAIC,KAEL,IAkGQC,EAlGf,kDACA,WAAYvB,GAAO,IAAD,8BAClB,cAAMA,IACDwB,MAAM,CACTtB,MAAM,GACNuB,YAAY,CACVf,KAAK,GACLF,IAAI,KAGR,EAAKkB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKX,WAAa,EAAKA,WAAWW,KAAhB,gBAClB,EAAKd,UAAY,EAAKA,UAAUc,KAAf,gBAZC,EADlB,wDAiBYf,GACViB,KAAKC,SAAS,CACZL,YAAY,CACVf,KAAKE,EAAEE,OAAOL,MACdD,IAAIuB,KAAKC,WArBf,8BA4BSpB,GACRA,EAAEqB,iBACF,IAAMC,EAAUL,KAAKL,MAAMC,YAC3B,GAAkB,KAAfS,EAAQxB,KAAU,CACnB,IAAMyB,EAAQ,sBAAMN,KAAKL,MAAMtB,OAAjB,CAAwBgC,IACtCL,KAAKC,SAAS,CACZ5B,MAAMiC,EACNV,YAAY,CACTf,KAAK,GACLF,IAAI,SArCZ,iCA4CYA,GACV,IAAM4B,EAAeP,KAAKL,MAAMtB,MAAMmC,QAAO,SAAAjC,GAAI,OAC/CA,EAAKI,MAAMA,KACbqB,KAAKC,SAAS,CACZ5B,MAAOkC,MAhDX,gCAsDW1B,EAAKF,GACd8B,QAAQC,IAAI,SAASV,KAAKL,MAAMtB,OAChC,IAAMA,EAAQ2B,KAAKL,MAAMtB,MACzBA,EAAMC,KAAI,SAAAC,GACLA,EAAKI,MAAMA,IACZ8B,QAAQC,IAAInC,EAAKI,IAAK,OAAOA,GAC7BJ,EAAKM,KAAMA,MAGfmB,KAAKC,SAAS,CACZ5B,MAAOA,MAhEX,+BA6EI,OACE,qBAAKG,UAAU,MAAf,SAEA,mCAEE,uBAAME,GAAG,aAAaiC,SAAUX,KAAKD,QAArC,UACE,uBAAOtB,KAAK,OAAOmC,YAAY,aAAahC,MAAQoB,KAAKL,MAAMC,YAAYf,KAAMC,SAAUkB,KAAKH,cAChG,wBAAQpB,KAAK,SAAb,oBAEF,4BAAIuB,KAAKL,MAAMtB,MAAMQ,OAEnB,cAAC,EAAD,CAAWR,MAAO2B,KAAKL,MAAMtB,MAAOc,WAAYa,KAAKb,WAAYH,UAAWgB,KAAKhB,qBAxF3F,GAA0B6B,IAAMC,WCIjBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ce70e683.chunk.js","sourcesContent":["import React from 'react'\r\nimport './ListItems.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport FlipMove from 'react-flip-move';\r\n\r\nfunction ListItems(props) {\r\n    const items = props.items;\r\n    const listItems = items.map(item =>\r\n        {\r\n        return <div className=\"list\" key={item.key}>\r\n            <p>\r\n         <input type=\"text\" id={item.key} value={item.text} onChange={(e)=>{\r\n             props.setUpdate(e.target.value,item.key)}}/>\r\n        <span>\r\n\r\n<FontAwesomeIcon className=\"faicons\" onClick={() => {\r\n    props.deleteItem(item.key)\r\n}} icon=\"trash\" />\r\n</span>\r\n\r\n\r\n     </p>\r\n\r\n</div>\r\n\r\n    })\r\n\r\n    return (\r\n        <div>\r\n             <FlipMove duration={300} easing=\"ease-in-out\">\r\n        {listItems}\r\n        </FlipMove>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListItems\r\n","import React from 'react';\nimport './App.css';\nimport ListItems from './ListItems';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faTrash)\n\nexport class App extends  React.Component {\nconstructor(props){\nsuper(props);\nthis.state={\n  items:[],\n  currentItem:{\n    text:'',\n    key:''\n  }\n}\nthis.handleInput = this.handleInput.bind(this);\nthis.addItem = this.addItem.bind(this);\nthis.deleteItem = this.deleteItem.bind(this);\nthis.setUpdate = this.setUpdate.bind(this);\n\n}\n\nhandleInput(e){\n  this.setState({\n    currentItem:{\n      text:e.target.value,\n      key:Date.now()\n    }\n\n  })\n}\n\n\n addItem(e){\n e.preventDefault();\n const newItem = this.state.currentItem;\n if(newItem.text!==\"\"){\n   const newItems =[...this.state.items, newItem];\n   this.setState({\n     items:newItems,\n     currentItem:{\n        text:'',\n        key:''\n     }\n   })\n }\n\n }\n\n deleteItem(key){\n  const filteredItems= this.state.items.filter(item =>\n    item.key!==key);\n  this.setState({\n    items: filteredItems\n  })\n\n } \n\n\n setUpdate(text,key){\n  console.log(\"items:\"+this.state.items);\n  const items = this.state.items;\n  items.map(item=>{      \n    if(item.key===key){\n      console.log(item.key +\"    \"+key)\n      item.text= text;\n    }\n  })\n  this.setState({\n    items: items\n  })\n\n\n}\n\n\n\n\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n\n      <header>\n        \n        <form id=\"to-do-form\" onSubmit={this.addItem}>\n          <input type=\"text\" placeholder=\"Enter task\" value= {this.state.currentItem.text} onChange={this.handleInput}></input>\n          <button type=\"submit\">Add</button>\n        </form>\n        <p>{this.state.items.text}</p>\n\n          <ListItems items={this.state.items} deleteItem={this.deleteItem} setUpdate={this.setUpdate}/>\n\n      </header>\n\n    </div>\n\n    );\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}